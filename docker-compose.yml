version: '3'

networks:
  reverse_proxy:
    external:
      name: reverse_proxy

services:
  my-project-php:
    container_name: ${COMPOSE_PROJECT_NAME}_php
    build:
      context: ./docker/php
    volumes:
      - ./:/var/www/html
      - ./docker/php/php-fpm-${CONTAINER_ENV}.conf:/usr/local/etc/php-fpm.d/php-fpm.conf
      - ./docker/php/www-${CONTAINER_ENV}.conf:/usr/local/etc/php-fpm.d/pool.d/www.conf
      - ./docker/php/php-${CONTAINER_ENV}.ini:/usr/local/etc/php/conf.d/php.ini
    env_file:
      - .env
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
    networks:
      - reverse_proxy
    depends_on:
      - my-project-database

  my-project-apache:
    container_name: ${COMPOSE_PROJECT_NAME}_apache
    build:
      context: ./docker/apache
    volumes:
      - ./:/var/www/html
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=my-project-php.docker
    networks:
      reverse_proxy:
        aliases:
          - web-serv

  my-project-database:
    container_name: ${COMPOSE_PROJECT_NAME}_database
    build:
      context: ./docker/mariadb
    volumes:
      - ./:/var/www/html
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    healthcheck:
      test: mysql --user=root --password=root --execute "show databases"
      interval: 5s
      timeout:  1s
      retries:  3
    ports:
      - 127.0.0.1:3306:3306
    networks:
      - reverse_proxy

  my-project-webpack:
    container_name: ${COMPOSE_PROJECT_NAME}_webpack
    build:
      context: ./docker/webpack
    hostname: ${COMPOSE_PROJECT_NAME}-webpack
    volumes:
      - ./:/app
    env_file:
      - .env
    ports:
      - 127.0.0.1:8080:8080
    networks:
      - reverse_proxy
    depends_on:
      - my-project-php

  reverse_proxy:
    image: jwilder/nginx-proxy
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - reverse_proxy
